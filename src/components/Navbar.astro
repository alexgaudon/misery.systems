---
interface Props {
	currentPath: string;
}

const { currentPath } = Astro.props;

const navLinks = [
	{ href: "/", label: "misery.systems", isBrand: true },
	{ href: "/about", label: "About", isBrand: false },
	{ href: "/services", label: "Services", isBrand: false },
];
---

<nav class="p-4">
	<div class="w-full md:w-1/2 mx-auto flex justify-between items-center">
		{navLinks
			.filter((link) => link.isBrand)
			.map((link) => (
				<a
					href={link.href}
					class="text-lg font-bold relative transition-colors duration-300"
				>
					<span class="hover:underline relative">
						{link.label}
						<span
							class={`absolute left-0 -bottom-1 w-full h-0.5 bg-white transition-all duration-300 ${
								currentPath === link.href
									? "opacity-100 scale-x-100"
									: "opacity-0 scale-x-0"
							}`}
							style={{
								transformOrigin: "left",
								transitionProperty: "opacity, transform",
								transform:
									currentPath === link.href ? "scaleX(1)" : "scaleX(0)",
							}}
							aria-hidden="true"
						></span>
					</span>
				</a>
			))}
		<ul class="flex space-x-4">
			{navLinks
				.filter((link) => !link.isBrand)
				.map((link) => (
					<li>
						<a
							href={link.href}
							class="relative transition-colors duration-300"
						>
							<span class="hover:underline relative">
								{link.label}
								<span
									class={`absolute left-0 -bottom-1 w-full h-0.5 bg-white transition-all duration-300 ${
										currentPath === link.href
											? "opacity-100 scale-x-100"
											: "opacity-0 scale-x-0"
									}`}
									style={{
										transformOrigin: "left",
										transitionProperty: "opacity, transform",
										transform:
											currentPath === link.href ? "scaleX(1)" : "scaleX(0)",
									}}
									aria-hidden="true"
								></span>
							</span>
						</a>
					</li>
				))}
		</ul>
	</div>
</nav>